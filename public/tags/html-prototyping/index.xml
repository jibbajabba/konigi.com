<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>html prototyping on Konigi</title><link>http://konigi.com/tags/html-prototyping/</link><description>Recent content in html prototyping on Konigi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 25 Aug 2015 15:15:25 -0700</lastBuildDate><atom:link href="http://konigi.com/tags/html-prototyping/index.xml" rel="self" type="application/rss+xml"/><item><title>Roots Static Site Builder</title><link>http://konigi.com/links/roots/</link><pubDate>Tue, 25 Aug 2015 15:15:25 -0700</pubDate><guid>http://konigi.com/links/roots/</guid><description>Roots is an open source static site compiler that can help take some of the work out of setting up your own build tasks using taskrunners like gulp or grunt. It runs in your terminal and requires minimal setup.</description></item><item><title>AniJS: Declarative handling library for CSS animations</title><link>http://konigi.com/links/anijs-declarative-handling-library-css-animations/</link><pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate><guid>http://konigi.com/links/anijs-declarative-handling-library-css-animations/</guid><description>AniJS is a library for CSS animations that allows you to write simple statements for handling animation as key/value pairs in html data attributes. It feels very close to writing natural language statements, in a format that is a bit more familiar in code than writing sentences. A simple example contains IF, ON, DO, and TO pairs and would look like this: &amp;lt;input id="name" type="text" data-anijs="if: focus, do: wobble, to: p"</description></item><item><title>uilang</title><link>http://konigi.com/links/uilang/</link><pubDate>Thu, 04 Sep 2014 00:00:00 +0000</pubDate><guid>http://konigi.com/links/uilang/</guid><description>uilang is a minimal, ui-focused programming language for web designers that handles click events, primarily for toggling classes and css display properties. I love the natural language approach to scripting in uilang. You just insert a statement in a code block like this and it works magically: &amp;lt;code&amp;gt;clicking on ".try-it" toggles class "hidden" on ".info-box"&amp;lt;/code&amp;gt; You still have to write your CSS to handle things like effects, but that's a plus if you don't want or need someone else's implementation of those things.</description></item><item><title>Semantic UI Library</title><link>http://konigi.com/links/semantic-ui-library/</link><pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate><guid>http://konigi.com/links/semantic-ui-library/</guid><description>Semantic UI is a framework for building HTML sites that aims at creating a system based on semantic naming and sensible defaults.
The framework compares itself directly with Bootstrap. It uses simple, common language for parts of interface elements and familiar rules used in natural languages for describing elements. Interface definitions are tag ambivalent so you can use div, article, section, span without affecting the display of the element.
http://semantic-ui.com/</description></item><item><title>Random User Generator</title><link>http://konigi.com/links/random-user-generator/</link><pubDate>Mon, 12 Aug 2013 00:00:00 +0000</pubDate><guid>http://konigi.com/links/random-user-generator/</guid><description>RandomUser is an API that provides you with a randomly generated user. These users can be used as placeholders in web mockups, and will save you time from creating your own placeholder information.
http://randomuser.me/</description></item><item><title>Mixture</title><link>http://konigi.com/links/mixture/</link><pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate><guid>http://konigi.com/links/mixture/</guid><description>Mixture is a rapid prototyping and static site generation tool for Mac and Windows. It works with the Liquid templating system, supports includes and smart paths, handles HAML and SASS comilation, CSS and JS minification, and provides a simple model system for global and custom data, and supports access to form and query data in their request model. It can produce static HTML that you can push to a hosting service, and allows use of your own domain.</description></item><item><title>Hammer for Mac</title><link>http://konigi.com/links/hammer-mac/</link><pubDate>Fri, 29 Mar 2013 00:00:00 +0000</pubDate><guid>http://konigi.com/links/hammer-mac/</guid><description>Hammer is a static web site builder for the Mac that lets you build out sites quickly with no server side requirements.
Hammer does includes without PHP, compiles Coffeescript to JS, SASS/SCSS to CSS, has an auto-refresh feature for never having to reload the browser, and provides some simple to use helpers. Since it knows about all of the files in your projects, you just reference names and it knows how to build out paths.</description></item><item><title>Static HTML: The new old school</title><link>http://konigi.com/blog/static-html-new-old-school/</link><pubDate>Fri, 29 Mar 2013 00:00:00 +0000</pubDate><guid>http://konigi.com/blog/static-html-new-old-school/</guid><description>I've been looking for ways to energize my creativity in between the longer stretches of time spent on difficult, routine, and less creative work. The thing that has been doing it for me lately is working with static html on some of my smaller production sites.
I was playing around with static html tools for a little side project I've been toying with. I was tinkering with Stacey and Kirby. Awesome tools for static PHP page building.</description></item><item><title>jKit: jQuery based UI Toolkit</title><link>http://konigi.com/links/jkit-jquery-based-ui-toolkit/</link><pubDate>Tue, 15 Jan 2013 00:00:00 +0000</pubDate><guid>http://konigi.com/links/jkit-jquery-based-ui-toolkit/</guid><description>jKit is a cross platform, jQuery based UI toolkit, that's small in size and is simple enough for non-programmers to use. There is a technique using a special attribute that even allows you to inject behaviors without writing javascript. It has commonly used design patterns, and nice techniques for content templating and binding to cover the basics of UI prototypes.
http://jquery-jkit.com/</description></item><item><title>One div: Pure CSS icons</title><link>http://konigi.com/links/one-div-pure-css-icons/</link><pubDate>Tue, 15 Jan 2013 00:00:00 +0000</pubDate><guid>http://konigi.com/links/one-div-pure-css-icons/</guid><description>One Div is a library of icons that are realised in pure css with only one html div as an alternative to SVG. Icons allow precise borders even when resizedâ€”same as one would expect with vector icons.
http://one-div.com/</description></item><item><title>Ai to Canvas Plug-In</title><link>http://konigi.com/links/ai-canvas-plug/</link><pubDate>Wed, 07 Nov 2012 00:00:00 +0000</pubDate><guid>http://konigi.com/links/ai-canvas-plug/</guid><description>The Ai-&amp;gt;Canvas plug-in enables Adobe Illustrator to export vector and bitmap artwork directly to an HTML5 canvas element that can be rendered in a canvas-enabled browser. The plug-in provides drawing, animation and coding options such as events so that you can build interactive, well-designed canvas-based web apps.
http://visitmix.com/labs/ai2canvas/</description></item><item><title>Learn to Code</title><link>http://konigi.com/design/learn-code/</link><pubDate>Tue, 30 Oct 2012 00:00:00 +0000</pubDate><guid>http://konigi.com/design/learn-code/</guid><description>The Debate The debate about whether or not designers need to learn to code is essentially about knowing enough HTML and CSS, and maybe some Javascript to be able to prototype web views.
Mastery and the ability to produce production code is not something most interaction designers and information architects will have the opportunity to achieve, but being capable enough to communicate design on web products requires some basic skills that you can learn in a few days or months to start.</description></item><item><title>Wirefy: Responsive Wireframe Library</title><link>http://konigi.com/links/wirefy-responsive-wireframe-library/</link><pubDate>Mon, 06 Aug 2012 00:00:00 +0000</pubDate><guid>http://konigi.com/links/wirefy-responsive-wireframe-library/</guid><description>Wirefy is a collection of CSS and JS files for creating responsive HTML wireframes. It builds on tools including the Frameless grid system and Boostrap, and has CSS media queries for adapting to different device resolutions.
http://cjdsie.github.com/wirefy/</description></item><item><title>Responsive Design Bookmarklet</title><link>http://konigi.com/links/responsive-design-bookmarklet/</link><pubDate>Mon, 16 Jul 2012 00:00:00 +0000</pubDate><guid>http://konigi.com/links/responsive-design-bookmarklet/</guid><description>Victor Coulon's Responsive Design Bookmarklet is a simple browser-based tool for testing your web layout in desktop, tablet and mobile phone dimensions. Save the bookmarklet, go to the page you want to test, then select the bookmarklet. It puts your page in a frame at the dimensions you want to test. Found via Takashi Sakamoto
http://responsive.victorcoulon.fr/</description></item><item><title>Bootstrap, from Twitter</title><link>http://konigi.com/links/bootstrap-twitter/</link><pubDate>Mon, 13 Feb 2012 00:00:00 +0000</pubDate><guid>http://konigi.com/links/bootstrap-twitter/</guid><description>Bootstrap is a free, simple, and flexible HTML, CSS (Less Framework), and Javascript (jQuery) for popular user interface components and interactions created by the devs at Twitter.
http://twitter.github.com/bootstrap/</description></item></channel></rss>